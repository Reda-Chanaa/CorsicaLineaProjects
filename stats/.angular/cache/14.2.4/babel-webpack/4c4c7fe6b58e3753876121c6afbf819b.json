{"ast":null,"code":"import _classCallCheck from \"C:/Users/rchanaa/OneDrive - corsicalinea.com/Documents/Reporting Stats/CorsicaLineaProjects/stats/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/rchanaa/OneDrive - corsicalinea.com/Documents/Reporting Stats/CorsicaLineaProjects/stats/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/rchanaa/OneDrive - corsicalinea.com/Documents/Reporting Stats/CorsicaLineaProjects/stats/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/rchanaa/OneDrive - corsicalinea.com/Documents/Reporting Stats/CorsicaLineaProjects/stats/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Directive, Renderer2, Host, Self, Optional, NgModule } from '@angular/core';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { CdkTableExporter, ServiceLocatorService, DataExtractorService, XLSX_LIGHTWEIGHT, CdkTableExporterModule } from 'cdk-table-exporter';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'cdk-table-exporter';\nimport * as ɵngcc2 from '@angular/material/table';\nexport * from 'cdk-table-exporter';\nvar MatTableExporterDirective = /*#__PURE__*/(function () {\n  var MatTableExporterDirective = /*#__PURE__*/function (_CdkTableExporter) {\n    _inherits(MatTableExporterDirective, _CdkTableExporter);\n\n    var _super = _createSuper(MatTableExporterDirective);\n\n    function MatTableExporterDirective(renderer, serviceLocator, dataExtractor, table) {\n      _classCallCheck(this, MatTableExporterDirective);\n\n      return _super.call(this, renderer, serviceLocator, dataExtractor, table);\n    }\n    /**\r\n     * Overriding ngAfterViewInit of TableExporter\r\n     */\n\n\n    _createClass(MatTableExporterDirective, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this = this;\n\n        this.exportStarted.subscribe(function (_) {\n          _this.enablePaginator(false);\n        });\n        this.exportCompleted.subscribe(function (_) {\n          _this.enablePaginator(true);\n        });\n      }\n      /**\r\n       * MatTable implementation of getPageCount\r\n       */\n\n    }, {\n      key: \"getPageCount\",\n      value: function getPageCount() {\n        return this.getPaginator().getNumberOfPages();\n      }\n      /**\r\n       * MatTable implementation of getPageSize\r\n       */\n\n    }, {\n      key: \"getPageSize\",\n      value: function getPageSize() {\n        var _a, _b;\n\n        return (_b = (_a = this.getPaginator()) === null || _a === void 0 ? void 0 : _a.pageSize) !== null && _b !== void 0 ? _b : 0;\n      }\n      /**\r\n       * MatTable implementation of getCurrentPageIndex\r\n       */\n\n    }, {\n      key: \"getCurrentPageIndex\",\n      value: function getCurrentPageIndex() {\n        var _a, _b;\n\n        return (_b = (_a = this.getPaginator()) === null || _a === void 0 ? void 0 : _a.pageIndex) !== null && _b !== void 0 ? _b : 0;\n      }\n      /**\r\n       * MatTable implementation of getTotalItemsCount\r\n       */\n\n    }, {\n      key: \"getTotalItemsCount\",\n      value: function getTotalItemsCount() {\n        var _a, _b, _c, _d, _e;\n\n        return (_e = (_b = (_a = this.getPaginator()) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : (_d = (_c = this.getDataSource()) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d.length) !== null && _e !== void 0 ? _e : 0;\n      }\n      /**\r\n       * MatTable implementation of goToPage\r\n       */\n\n    }, {\n      key: \"goToPage\",\n      value: function goToPage(index) {\n        this.getPaginator().pageIndex = index;\n\n        this.getPaginator()._changePageSize(this.getPaginator().pageSize);\n      }\n      /**\r\n       * MatTable implementation of getPageChangeObservable\r\n       */\n\n    }, {\n      key: \"getPageChangeObservable\",\n      value: function getPageChangeObservable() {\n        return this.getPaginator().page;\n      }\n    }, {\n      key: \"getDataSource\",\n      value: function getDataSource() {\n        return this._cdkTable.dataSource;\n      }\n    }, {\n      key: \"getPaginator\",\n      value: function getPaginator() {\n        return this.getDataSource().paginator;\n      }\n    }, {\n      key: \"enablePaginator\",\n      value: function enablePaginator(value) {\n        if (this.getPaginator()) {\n          this.getPaginator().disabled = !value;\n\n          this.getPaginator()._changePageSize(this.getPaginator().pageSize);\n        }\n      }\n    }]);\n\n    return MatTableExporterDirective;\n  }(CdkTableExporter);\n\n  MatTableExporterDirective.ɵfac = function MatTableExporterDirective_Factory(t) {\n    return new (t || MatTableExporterDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ServiceLocatorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataExtractorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatTable, 11));\n  };\n\n  MatTableExporterDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTableExporterDirective,\n    selectors: [[\"\", \"matTableExporter\", \"\"]],\n    exportAs: [\"matTableExporter\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTableExporterDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar MatTableExporterModule = /*#__PURE__*/(function () {\n  var MatTableExporterModule = /*#__PURE__*/function () {\n    function MatTableExporterModule() {\n      _classCallCheck(this, MatTableExporterModule);\n    }\n\n    _createClass(MatTableExporterModule, null, [{\n      key: \"forRoot\",\n      value: function forRoot(configuration) {\n        return {\n          ngModule: MatTableExporterModule,\n          providers: [{\n            provide: XLSX_LIGHTWEIGHT,\n            useValue: configuration.xlsxLightWeight\n          }]\n        };\n      }\n    }]);\n\n    return MatTableExporterModule;\n  }();\n\n  MatTableExporterModule.ɵfac = function MatTableExporterModule_Factory(t) {\n    return new (t || MatTableExporterModule)();\n  };\n\n  MatTableExporterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatTableExporterModule\n  });\n  MatTableExporterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [MatTableModule, CdkTableExporterModule]\n  });\n  return MatTableExporterModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableExporterModule, {\n    declarations: function declarations() {\n      return [MatTableExporterDirective];\n    },\n    imports: function imports() {\n      return [MatTableModule, CdkTableExporterModule];\n    },\n    exports: function exports() {\n      return [MatTableExporterDirective];\n    }\n  });\n})();\n/*\r\n * Public API Surface of mat-table-exporter\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { MatTableExporterDirective, MatTableExporterModule }; //# sourceMappingURL=mat-table-exporter.js.map","map":null,"metadata":{},"sourceType":"module"}