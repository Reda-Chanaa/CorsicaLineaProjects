{"ast":null,"code":"import _classCallCheck from \"C:/Users/rchanaa/OneDrive - corsicalinea.com/Documents/Reporting Stats/CorsicaLineaProjects/stats/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/rchanaa/OneDrive - corsicalinea.com/Documents/Reporting Stats/CorsicaLineaProjects/stats/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/progress-spinner\";\nimport * as i5 from \"@angular/material/checkbox\";\n\nfunction ProfilingComponent_div_19_section_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"section\", 17)(1, \"mat-checkbox\", 18);\n    i0.ɵɵlistener(\"change\", function ProfilingComponent_div_19_section_2_Template_mat_checkbox_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onChange($event));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var order_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", order_r6.selected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(order_r6.name);\n  }\n}\n\nfunction ProfilingComponent_div_19_section_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"section\", 17)(1, \"mat-checkbox\", 18);\n    i0.ɵɵlistener(\"change\", function ProfilingComponent_div_19_section_4_Template_mat_checkbox_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      var ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onChange($event));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var order_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", order_r9.selected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(order_r9.name);\n  }\n}\n\nfunction ProfilingComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Les colonnes \\xE0 afficher : \");\n    i0.ɵɵtemplate(2, ProfilingComponent_div_19_section_2_Template, 3, 2, \"section\", 16);\n    i0.ɵɵtext(3, \" Filtrer par : \");\n    i0.ɵɵtemplate(4, ProfilingComponent_div_19_section_4_Template, 3, 2, \"section\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.ordersData);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.ordersData);\n  }\n}\n\nfunction ProfilingComponent_mat_spinner_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 19);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 100);\n  }\n} // class pour les requettes GET et POST.\n\n\nexport var ApiStat = /*#__PURE__*/(function () {\n  var ApiStat = /*#__PURE__*/function () {\n    function ApiStat(http) {\n      _classCallCheck(this, ApiStat);\n\n      this.http = http;\n      this.baseurl = \"http://127.0.0.1:8000\";\n    }\n    /*\r\n    sendStat(File: any): Observable<any> {\r\n      let formData = new FormData();\r\n      formData.append('file1', File, File.name);\r\n          var header = new HttpHeaders();\r\n      header.append('Content-Type', 'multipart/form-data');\r\n      return this.http.post(this.baseurl + '/profiling/', formData, { headers: header })\r\n    }*/\n\n\n    _createClass(ApiStat, [{\n      key: \"sweetviz\",\n      value: function sweetviz(File) {\n        var formData = new FormData();\n        formData.append('file1', File, File.name);\n        var header = new HttpHeaders();\n        header.append('Content-Type', 'multipart/form-data');\n        return this.http.post(this.baseurl + '/sweetviz/', formData, {\n          headers: header\n        });\n      }\n      /*\r\n      pandasgui(File: any): Observable<any> {\r\n        let formData = new FormData();\r\n        formData.append('file1', File, File.name);\r\n            var header = new HttpHeaders();\r\n        header.append('Content-Type', 'multipart/form-data');\r\n        return this.http.post(this.baseurl + '/pandasgui/', formData, { headers: header })\r\n      }*/\n\n    }, {\n      key: \"getcolumn\",\n      value: function getcolumn(File) {\n        var formData = new FormData();\n        formData.append('file1', File, File.name);\n        var header = new HttpHeaders();\n        header.append('Content-Type', 'multipart/form-data');\n        return this.http.post(this.baseurl + '/getcolumn/', formData, {\n          headers: header\n        });\n      }\n    }]);\n\n    return ApiStat;\n  }();\n\n  ApiStat.ɵfac = function ApiStat_Factory(t) {\n    return new (t || ApiStat)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApiStat.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiStat,\n    factory: ApiStat.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiStat;\n})();\nexport var ProfilingComponent = /*#__PURE__*/(function () {\n  var ProfilingComponent = /*#__PURE__*/function () {\n    function ProfilingComponent(DATACLEANING) {\n      _classCallCheck(this, ProfilingComponent);\n\n      this.DATACLEANING = DATACLEANING;\n      this.ordersData = [];\n    } // function executed when file is changed\n\n\n    _createClass(ProfilingComponent, [{\n      key: \"fileChangeListener1\",\n      value: function fileChangeListener1($event) {\n        this.df1 = $event.target.files[0];\n        /*this.values=0\r\n        \r\n        this.DATACLEANING.getcolumn(this.df1).subscribe(\r\n          data => {\r\n            this.values=10\r\n            // async orders\r\n            this.ordersData=data\r\n            console.log(data)\r\n          }\r\n        )*/\n      } // Get Statistics forms\n\n    }, {\n      key: \"sweetviz\",\n      value: function sweetviz() {\n        var _this = this;\n\n        if (this.df1 != null) {\n          this.value = 0;\n          this.DATACLEANING.sweetviz(this.df1).subscribe(function (data) {\n            _this.value = 10;\n            console.log(\"lets go\");\n            console.log(data); //data=data.substring(15);\n\n            setTimeout(function () {//this.router.navigate(['dashboard'], { queryParams: { data: data } });\n            }, 1);\n          });\n        }\n      }\n    }]);\n\n    return ProfilingComponent;\n  }();\n\n  ProfilingComponent.ɵfac = function ProfilingComponent_Factory(t) {\n    return new (t || ProfilingComponent)(i0.ɵɵdirectiveInject(ApiStat));\n  };\n\n  ProfilingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfilingComponent,\n    selectors: [[\"app-profiling\"]],\n    features: [i0.ɵɵProvidersFeature([ApiStat])],\n    decls: 26,\n    vars: 2,\n    consts: [[1, \"panel-header\", \"panel-header-sm\"], [1, \"main-content\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [\"ngNativeValidate\", \"\", 1, \"ng-untouched\", \"ng-pristine\", \"ng-invalid\"], [\"myForm\", \"ngForm\"], [\"for\", \"file\"], [\"type\", \"file\", \"name\", \"File Upload\", \"id\", \"csvFile1\", \"accept\", \".csv\", 3, \"change\"], [\"fileInput\", \"\"], [4, \"ngIf\"], [1, \"btn\", \"pull-right\", 2, \"background-color\", \"rgb(256,54,54)\", 3, \"click\"], [\"style\", \"stroke: rgb(256,54,54);\", \"strokeWidth\", \"3\", 3, \"diameter\", 4, \"ngIf\"], [\"class\", \"example-section\", 4, \"ngFor\", \"ngForOf\"], [1, \"example-section\"], [1, \"example-margin\", 3, \"checked\", \"change\"], [\"strokeWidth\", \"3\", 2, \"stroke\", \"rgb(256,54,54)\", 3, \"diameter\"]],\n    template: function ProfilingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"Profilage des donn\\xE9es\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"form\", 8, 9)(12, \"div\")(13, \"label\", 10)(14, \"b\");\n        i0.ɵɵtext(15, \"Choisir un fichier CSV :\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"input\", 11, 12);\n        i0.ɵɵlistener(\"change\", function ProfilingComponent_Template_input_change_16_listener($event) {\n          return ctx.fileChangeListener1($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵtemplate(19, ProfilingComponent_div_19_Template, 5, 2, \"div\", 13);\n        i0.ɵɵelement(20, \"br\")(21, \"br\");\n        i0.ɵɵelementStart(22, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function ProfilingComponent_Template_button_click_22_listener() {\n          return ctx.sweetviz();\n        });\n        i0.ɵɵelementStart(23, \"b\");\n        i0.ɵɵtext(24, \"G\\xE9nerer le sweetviz\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(25, ProfilingComponent_mat_spinner_25_Template, 1, 1, \"mat-spinner\", 15);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngIf\", ctx.values === 10);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.value === 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.NgControlStatusGroup, i3.NgForm, i4.MatProgressSpinner, i5.MatCheckbox]\n  });\n  return ProfilingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}